实现功能：自动巡线

硬件：STM32F4开发板
          双L298N电机驱动板
          OpenMv
          电压转换板

硬件连接：      STM32        OpenMv         L298N
                        PA9-------->P5
                        PA10------->P4
	        GND------->GND
	        PD12--------------------->ENA					
  	        PD13--------------------->ENB
	        PD14--------------------->ENC
	        PD15--------------------->END
	        PC0----------------------->IN1
	        PC1----------------------->IN2
	        PC2----------------------->IN3
	        PC3----------------------->IN4
	        PA1----------------------->IN5
	        PA2----------------------->IN6
	        PC6----------------------->IN7
	        PC7----------------------->IN8

控制原理：OpenMv通过线性回归得到直线的偏移距离（直线相对于画面中心的偏差）、偏移角度（直线的倾斜角）、直线的长度
	通过串口通信发送给STM32，STM32通过PID调节左右轮子的PWM占空比来改变速度差进而调整小车让直线始终位于画面的中央

通信及数据解析原理：OpenMv得到数据后在有效数据之前加上两个帧头（作为数据检测开始的标识符）、之后加上两个帧尾（作为结束接收数据的标识符）
		  并转化成16进制发送给STM32


函数说明：/************openmv.c*************/
                void Data_Processing(u8 *data_buf,u8 num)
	功能：对OpenMv发送过来的数据进行还原，便于接下来的数据处理

	void Receive_Prepare(u8 data)
	功能：对数据进行检测，保证了数据的有效性，只有检测到帧头之后才会对数据进行还原，否则就会一直检测。


	/************pwm.c*************/
	void Set_LeftPwm_Compare(int compare)
	功能：改变左边两个轮子PWM的占空比，通过操作寄存器（TIM4->CR3、TIM4->CR4）的方式实现。

	void Set_RightPwm_Compare(int compare)
	功能：改变右边两个轮子PWM的占空比，通过操作寄存器（TIM4->CR1、TIM4->CR2）的方式实现。
